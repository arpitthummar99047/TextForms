{"ast":null,"code":"import React,{useState}from\"react\";import\"./App.css\";import About from\"./component/About\";import Navbar from\"./component/Navbar\";import TextForm from\"./component/TextForm\";import Alert from\"./component/Alert\";import{Route,Routes}from\"react-router-dom\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function App(){const[mode,setMode]=useState(\"light\");const[alert,setAlert]=useState(null);// Alert\nconst showAlert=(message,type)=>{setAlert({msg:message,type:type});setTimeout(()=>{setAlert(null);},2000);};const toggleMode=()=>{if(mode===\"light\"){setMode(\"dark\");document.body.style.backgroundColor=\"#010525\";showAlert(\"Dark mode has been enabled\",\"success\");}else{setMode(\"light\");document.body.style.backgroundColor=\"white\";showAlert(\"Light mode has been enabled\",\"success\");}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Navbar,{title1:\"TextSpark\",about:\"About\",home:\"Home\",mode:mode,toggleMode:toggleMode}),/*#__PURE__*/_jsx(Alert,{alert:alert}),/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(TextForm,{showAlert:showAlert,heading:\"Try TextSpark - words counter, character counter, Remove extra spaces\",mode:mode})}),/*#__PURE__*/_jsx(Route,{path:\"/about\",element:/*#__PURE__*/_jsx(About,{about:\"About Us\",mode:mode,toggleMode:toggleMode})})]})]});}export default App;","map":{"version":3,"names":["React","useState","About","Navbar","TextForm","Alert","Route","Routes","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","App","mode","setMode","alert","setAlert","showAlert","message","type","msg","setTimeout","toggleMode","document","body","style","backgroundColor","children","title1","about","home","path","element","heading"],"sources":["E:/My project/TextForms/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport About from \"./component/About\";\nimport Navbar from \"./component/Navbar\";\nimport TextForm from \"./component/TextForm\";\nimport Alert from \"./component/Alert\";\nimport { Route, Routes } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n  // Alert\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  };\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#010525\";\n      showAlert(\"Dark mode has been enabled\", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode has been enabled\", \"success\");\n    }\n  };\n\n  return (\n    <>\n      <Navbar\n        title1=\"TextSpark\"\n        about=\"About\"\n        home=\"Home\"\n        mode={mode}\n        toggleMode={toggleMode}\n      />\n      <Alert alert={alert} />\n\n      <Routes>\n        <Route\n          path=\"/\"\n          element={\n            <TextForm\n              showAlert={showAlert}\n              heading=\"Try TextSpark - words counter, character counter, Remove extra spaces\"\n              mode={mode}\n            />\n          }\n        />\n\n        <Route\n          path=\"/about\"\n          element={\n            <About about=\"About Us\" mode={mode} toggleMode={toggleMode} />\n          }\n        />\n      </Routes>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,WAAW,CAClB,MAAO,CAAAC,KAAK,KAAM,mBAAmB,CACrC,MAAO,CAAAC,MAAM,KAAM,oBAAoB,CACvC,MAAO,CAAAC,QAAQ,KAAM,sBAAsB,CAC3C,MAAO,CAAAC,KAAK,KAAM,mBAAmB,CACrC,OAASC,KAAK,CAAEC,MAAM,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAEjD,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGf,QAAQ,CAAC,OAAO,CAAC,CACzC,KAAM,CAACgB,KAAK,CAAEC,QAAQ,CAAC,CAAGjB,QAAQ,CAAC,IAAI,CAAC,CAExC;AACA,KAAM,CAAAkB,SAAS,CAAGA,CAACC,OAAO,CAAEC,IAAI,GAAK,CACnCH,QAAQ,CAAC,CACPI,GAAG,CAAEF,OAAO,CACZC,IAAI,CAAEA,IACR,CAAC,CAAC,CACFE,UAAU,CAAC,IAAM,CACfL,QAAQ,CAAC,IAAI,CAAC,CAChB,CAAC,CAAE,IAAI,CAAC,CACV,CAAC,CAED,KAAM,CAAAM,UAAU,CAAGA,CAAA,GAAM,CACvB,GAAIT,IAAI,GAAK,OAAO,CAAE,CACpBC,OAAO,CAAC,MAAM,CAAC,CACfS,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,CAAG,SAAS,CAC/CT,SAAS,CAAC,4BAA4B,CAAE,SAAS,CAAC,CACpD,CAAC,IAAM,CACLH,OAAO,CAAC,OAAO,CAAC,CAChBS,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,CAAG,OAAO,CAC7CT,SAAS,CAAC,6BAA6B,CAAE,SAAS,CAAC,CACrD,CACF,CAAC,CAED,mBACER,KAAA,CAAAE,SAAA,EAAAgB,QAAA,eACEpB,IAAA,CAACN,MAAM,EACL2B,MAAM,CAAC,WAAW,CAClBC,KAAK,CAAC,OAAO,CACbC,IAAI,CAAC,MAAM,CACXjB,IAAI,CAAEA,IAAK,CACXS,UAAU,CAAEA,UAAW,CACxB,CAAC,cACFf,IAAA,CAACJ,KAAK,EAACY,KAAK,CAAEA,KAAM,CAAE,CAAC,cAEvBN,KAAA,CAACJ,MAAM,EAAAsB,QAAA,eACLpB,IAAA,CAACH,KAAK,EACJ2B,IAAI,CAAC,GAAG,CACRC,OAAO,cACLzB,IAAA,CAACL,QAAQ,EACPe,SAAS,CAAEA,SAAU,CACrBgB,OAAO,CAAC,uEAAuE,CAC/EpB,IAAI,CAAEA,IAAK,CACZ,CACF,CACF,CAAC,cAEFN,IAAA,CAACH,KAAK,EACJ2B,IAAI,CAAC,QAAQ,CACbC,OAAO,cACLzB,IAAA,CAACP,KAAK,EAAC6B,KAAK,CAAC,UAAU,CAAChB,IAAI,CAAEA,IAAK,CAACS,UAAU,CAAEA,UAAW,CAAE,CAC9D,CACF,CAAC,EACI,CAAC,EACT,CAAC,CAEP,CAEA,cAAe,CAAAV,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}